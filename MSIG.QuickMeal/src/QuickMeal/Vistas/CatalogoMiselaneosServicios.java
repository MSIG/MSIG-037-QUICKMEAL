/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package QuickMeal.Vistas;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import QuickMeal.Objetos.ObjetoServicio;
import QuickMeal.Accesos.AccesoServicio;
import QuickMeal.Accesos.Mensaje;
import java.rmi.server.ObjID;
import java.util.HashSet;
import java.util.Set;
//import QuickMeal.Accesos.

/**
 *
 * @author Megabytes Soluciones Integrales Guatemala
 */
public class CatalogoMiselaneosServicios extends javax.swing.JInternalFrame {
    
    Mensaje Mensaje = new Mensaje();
    ObjetoServicio servicio = new ObjetoServicio();
    AccesoServicio nuevoServicio= new AccesoServicio();

    /**
     * Creates new form wdwIngresosProveedores
     */
    public CatalogoMiselaneosServicios() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        pnlEncabezado = new javax.swing.JPanel();
        lblIdServicio = new javax.swing.JLabel();
        txtIdServicio = new javax.swing.JTextField();
        lblDescripcionServicio = new javax.swing.JLabel();
        txtDescripcionServicio = new javax.swing.JTextField();
        lblCosto = new javax.swing.JLabel();
        txtCosto = new javax.swing.JTextField();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblServicio = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Servicios");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/proveedores.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(700, 600));
        setMinimumSize(new java.awt.Dimension(700, 600));
        setPreferredSize(new java.awt.Dimension(700, 600));

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblBuscar.setText("Buscar");

        txtBuscar.setToolTipText("Ingrese el nombre del proveedor a buscar");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/buscar.png"))); // NOI18N
        btnBuscar.setActionCommand("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuickMeal/Imagenes/editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBuscar)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscar))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlEncabezado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdServicio.setText("ID Servicio");

        txtIdServicio.setEditable(false);
        txtIdServicio.setToolTipText("El ID del Proveedor sera asignado Automaticamente");

        lblDescripcionServicio.setText("Descripcion");

        txtDescripcionServicio.setToolTipText("Ingese el nombre de la persona este no puede contener simbolos ni numeros");

        lblCosto.setText("Costo");

        txtCosto.setToolTipText("Ingrese el numero de telefono del proveedor sin guiones");

        lblPrecio.setText("Precio");

        txtPrecio.setToolTipText("Ingrese la direccion del Proveedor tiene un maximo de 200 caracteres");

        javax.swing.GroupLayout pnlEncabezadoLayout = new javax.swing.GroupLayout(pnlEncabezado);
        pnlEncabezado.setLayout(pnlEncabezadoLayout);
        pnlEncabezadoLayout.setHorizontalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(lblIdServicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(lblCosto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrecio)
                    .addComponent(lblDescripcionServicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescripcionServicio, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                    .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlEncabezadoLayout.setVerticalGroup(
            pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdServicio)
                    .addComponent(txtIdServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescripcionServicio)
                    .addComponent(txtDescripcionServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCosto)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblServicioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblServicio);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarRegistro(){
        
        // Si se ingresan todos los datos del proveedor asigno valor a los objetos
        if(verificarDatosServicio()){
            servicio.setDescripcion_servicio(txtDescripcionServicio.getText());
            servicio.setCosto_servicio(Double.parseDouble(txtCosto.getText()));
            servicio.setPrecio_servicio(Double.parseDouble(txtPrecio.getText()));
        }
        
        try{
            nuevoServicio.insertarServicio(servicio);
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al guardar los datos del servicio " + error);
        }
        
    }
    
    private boolean verificarDatosServicio(){
        boolean vDatosCorrectos = true;
        
        if (txtDescripcionServicio.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese la descripcion del proveedor");
            vDatosCorrectos = false;
        }
        if (txtCosto.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese el costo del servicio");
            vDatosCorrectos = false;
        }
        if (txtPrecio.getText().isEmpty()) {
            Mensaje.manipulacionExcepciones("critico", "Ingrese el precio del servicio");
            vDatosCorrectos = false;
        }
        
        return vDatosCorrectos;
    }
    
    private void limpiarCampos(){
        txtIdServicio.setText("");
        txtDescripcionServicio.setText("");
        txtPrecio.setText("");
        txtCosto.setText("");
        txtBuscar.setText("");
    }
    
    private void actualizarRegistro(){
        servicio.setId_servicio(Integer.parseInt(txtIdServicio.getText()));
        servicio.setDescripcion_servicio(txtDescripcionServicio.getText());
        servicio.setCosto_servicio(Double.parseDouble(txtCosto.getText()));
        servicio.setPrecio_servicio(Double.parseDouble(txtPrecio.getText()));
        
        try{
            nuevoServicio.actualizarServicio(servicio);
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Error al actualizar el servicios " + error);
        }
    }
    
    private int obtenerIdServicio(String pDescripcion){
        int vId_proveedor = 0;
        ArrayList<ObjetoServicio> BuscarServicio = new ArrayList();
        
        try{
            BuscarServicio = nuevoServicio.seleccionarServicio(pDescripcion);
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al consultar servicio " + error);
        }
        
        if(BuscarServicio.isEmpty()){
            Mensaje.manipulacionExcepciones("informacion", "Debe crear el servicio en el sistema");
        }else{
            if(BuscarServicio.size() > 1){
                System.out.println("EXISTEN " + BuscarServicio.size() + " SERVICIOS CON ESTE NOMBRE");
                Mensaje.manipulacionExcepciones("critico", "esta repetido");
            }else{
                vId_proveedor = BuscarServicio.get(0).getId_servicio();
            }
        }
        
        return vId_proveedor;
    }
    
    private void buscarEnRegistrosGuardados(){
        String busqueda = txtBuscar.getText();
        
        if(busqueda != null){
            DefaultTableModel tabla = new DefaultTableModel();
            
            ArrayList<ObjetoServicio> listaServicios = new ArrayList();
            
            int contadorFilas = 1;
            int cProveedor = 0;
            
            // Verificar algun erro al cargar la informacion de los proveedores
            try{
                listaServicios = nuevoServicio.seleccionarServicio(busqueda);
                
                System.out.println("SE CONSULTARON LOS DATOS DE SERVICIOS");
                
            }catch(Error error){
                Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al consultar la informacion " + error);
            }
            
            // Mostrar la informacion de los proveedores en la tabla de la vista
            if(listaServicios.isEmpty()){
                Mensaje.manipulacionExcepciones("critico", "No existe datos almacenados de los servicios");
            }else{
                tabla.addColumn("DESCRIPCION");
                tabla.addColumn("COSTO");
                tabla.addColumn("PRECIO");
                
                for(ObjetoServicio xServicio : listaServicios){
                    
                    tabla.setRowCount(contadorFilas);
                    
                    tabla.setValueAt(xServicio.getDescripcion_servicio(), cProveedor, 0);
                    tabla.setValueAt(xServicio.getCosto_servicio(), cProveedor, 1);
                    tabla.setValueAt(xServicio.getPrecio_servicio(), cProveedor, 2);
                    
                    System.out.println("Se encontro el registro " + xServicio.getDescripcion_servicio());
                    cProveedor++;
                    contadorFilas++;
                    
                }
                
                tblServicio.setModel(tabla);    
            }
            
        }else{
            mostrarRegistrosGuardados();
        }
        
    }
    
    public void mostrarRegistrosGuardados(){
        DefaultTableModel tabla = new DefaultTableModel();
        
         ArrayList<ObjetoServicio> listaServicios = new ArrayList();
         
         try{
             listaServicios = nuevoServicio.retornaServicios();
             
         }catch(Exception error){
             Mensaje.manipulacionExcepciones("critico", "Error en busqueda " + error);
         }
         
         if(listaServicios.isEmpty()){
             Mensaje.manipulacionExcepciones("critico", "No existen datos almacenados de servicios");
         }else{
                tabla.addColumn("DESCRIPCION");
                tabla.addColumn("COSTO");
                tabla.addColumn("PRECIO");
                
                tabla.setRowCount(listaServicios.size());
                int cProveedor = 0;
                
                for(ObjetoServicio xServicio : listaServicios){
                    
                    tabla.setValueAt(xServicio.getDescripcion_servicio(), cProveedor, 0);
                    tabla.setValueAt(xServicio.getCosto_servicio(), cProveedor, 1);
                    tabla.setValueAt(xServicio.getPrecio_servicio(), cProveedor, 2);
                    
                    System.out.println("Se encontro el registro " + xServicio.getDescripcion_servicio());
                    
                    cProveedor++;
                }
         }
         tblServicio.setModel(tabla);
    }
    
     private void buscarServicio() {

        boolean servicio_encontrado = false;

        ArrayList<ObjetoServicio> BuscarServicio = new ArrayList();

        try {
            BuscarServicio = nuevoServicio.seleccionarServicio(txtDescripcionServicio.getText());
        } catch (Exception error) {
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un erro al buscar informacion sobre este proveedor " + error);
        }

        if (BuscarServicio.isEmpty()) {
            servicio_encontrado = false;
        } else {
            if(BuscarServicio.size() > 1){
                System.out.println("EXISTEN " + BuscarServicio.size() + " SERVICIOS CON ESTE NUMERO DE NIT");
                Mensaje.manipulacionExcepciones("critico", "Este codigo esta repetido");
            }else{
                servicio_encontrado = true;
                
                txtDescripcionServicio.setText(BuscarServicio.get(0).getDescripcion_servicio());
                txtCosto.setText(String.valueOf(BuscarServicio.get(0).getCosto_servicio()));
                txtPrecio.setText(String.valueOf(BuscarServicio.get(0).getPrecio_servicio()));
            }
            
        }
    }
     
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarEnRegistrosGuardados();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarRegistro();
        mostrarRegistrosGuardados();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(txtDescripcionServicio.getText().isEmpty()){
            Mensaje.manipulacionExcepciones("informacion", "Debe seleccionar el registro a modificar");
        }else{
            actualizarRegistro();
            mostrarRegistrosGuardados();
        }
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        Mensaje.manipulacionExcepciones("interrogante", "¿Esta seguro que desea salir?");
        if (Mensaje.valor == 0) {
            dispose();
        }

    }//GEN-LAST:event_btnSalirActionPerformed

    private void tblServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServicioMouseClicked
        if (String.valueOf(tblServicio.getSelectedColumn()).equals("0")) {
            
            // ASIGNAR AL ENCABEZADO LOS DATOS
            int fila_seleccionada = tblServicio.getSelectedRow();
            int columna_seleccionada = tblServicio.getSelectedColumn();
            
            txtDescripcionServicio.setText(String.valueOf(tblServicio.getValueAt(fila_seleccionada, columna_seleccionada )));
            txtCosto.setText(String.valueOf(tblServicio.getValueAt(fila_seleccionada, columna_seleccionada + 1)));
            txtPrecio.setText(String.valueOf(tblServicio.getValueAt(fila_seleccionada, columna_seleccionada + 2)));
            

            //YA SELECCIONADO EL NIT BUSCO EL PROVEEDOR
            txtIdServicio.setText(String.valueOf(obtenerIdServicio(txtDescripcionServicio.getText())));
        }
    }//GEN-LAST:event_tblServicioMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblDescripcionServicio;
    private javax.swing.JLabel lblIdServicio;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JPanel pnlEncabezado;
    private javax.swing.JTable tblServicio;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDescripcionServicio;
    private javax.swing.JTextField txtIdServicio;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
